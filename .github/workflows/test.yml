name: Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_PROFILE_DEV_DEBUG: 0

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust"
          key: test-${{ matrix.rust }}
          save-if: true
          shared-key: workspace

      - name: Check formatting
        if: matrix.rust == 'stable'
        run: cargo fmt --all -- --check

      - name: Run Clippy
        if: matrix.rust == 'stable'
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Build
        run: cargo build

      - name: Run tests
        run: cargo test

      - name: Run doc tests
        run: cargo test --doc

      - name: Test examples
        if: matrix.rust == 'stable'
        run: |
          if [ -d "examples" ]; then
            for example_file in examples/*.rs; do
              if [ -f "$example_file" ]; then
                example=$(basename "$example_file" .rs)
                echo "Running example: $example"
                cargo run --example "$example"
              fi
            done
          else
            echo "No examples directory found"
          fi

      - name: Check documentation
        if: matrix.rust == 'stable'
        run: cargo doc --no-deps --document-private-items

  minimal-versions:
    name: Minimal Versions
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@nightly

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust"
          key: minimal-versions
          shared-key: workspace

      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@main

      - name: Install cargo-minimal-versions
        run: cargo binstall --no-confirm cargo-minimal-versions

      - name: Check minimal versions
        run: cargo minimal-versions check

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust"
          key: security-audit
          shared-key: workspace

      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@main

      - name: Install cargo-audit
        run: cargo binstall --no-confirm cargo-audit

      - name: Run security audit
        run: cargo audit

  benchmarks:
    name: Benchmarks
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust"
          key: benchmarks
          shared-key: workspace

      - name: Run benchmarks
        run: cargo bench --no-run

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust"
          key: coverage
          shared-key: workspace

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: lcov.info
          fail_ci_if_error: false

  msrv:
    name: Minimum Supported Rust Version
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2
        with:
          prefix-key: "v0-rust"
          key: msrv
          shared-key: workspace

      - name: Install cargo-binstall
        uses: cargo-bins/cargo-binstall@main

      - name: Install cargo-msrv
        run: cargo binstall --no-confirm cargo-msrv

      - name: Verify MSRV
        run: cargo msrv verify
