name: Test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_PROFILE_DEV_DEBUG: 0

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust:
          - stable
          - beta
          - nightly
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          components: rustfmt, clippy

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Install tools
        uses: taiki-e/install-action@v2
        with:
          tool: just,nextest,cargo-deny

      - name: Check formatting
        if: matrix.rust == 'stable'
        run: just fmt-check

      - name: Run Clippy
        if: matrix.rust == 'stable'
        run: just lint

      - name: Run cargo deny
        if: matrix.rust == 'stable'
        run: just deny

      - name: Build
        run: just build

      - name: Check documentation
        if: matrix.rust == 'stable'
        run: just docs-private

      - name: Run tests with JUnit output
        run: |
          just test "" ci

      - name: Upload test results as artifact
        if: ${{ !cancelled() }}
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.rust }}
          path: target/nextest/ci/junit.xml

      - name: Upload test results to Codecov
        if: ${{ !cancelled() && matrix.rust == 'stable' }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: target/nextest/ci/junit.xml
          flags: unit-tests
          name: unit-test-results
          fail_ci_if_error: false

      - name: Test examples
        if: matrix.rust == 'stable'
        run: |
          echo "Testing all examples..."
          for example in $(just example-list); do
            echo "Running example: $example"
            just example "$example"
          done

  minimal-versions:
    name: Minimal Versions
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@nightly

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Install tools
        uses: taiki-e/install-action@v2
        with:
          tool: just,cargo-hack,cargo-minimal-versions

      - name: Check minimal versions
        run: just minimal-versions

  benchmarks:
    name: Benchmarks
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Install just
        uses: taiki-e/install-action@v2
        with:
          tool: just

      - name: Run benchmarks
        run: just bench

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Install tools
        uses: taiki-e/install-action@v2
        with:
          tool: just,cargo-llvm-cov,nextest

      - name: Generate code coverage
        run: just test-coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          flags: unit-tests
          name: unit-tests
          fail_ci_if_error: false

  msrv:
    name: Minimum Supported Rust Version
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Set up Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Install tools
        uses: taiki-e/install-action@v2
        with:
          tool: just,cargo-msrv,nextest

      - name: Verify MSRV
        run: just msrv
